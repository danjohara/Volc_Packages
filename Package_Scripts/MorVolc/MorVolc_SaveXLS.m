function MorVolc_SaveXLS(xlsFolFil,MV_Res)
% Name: Morvolc_SaveXLS
% Author: Daniel O'Hara
% Date: 03/17/2021 (mm/dd/yyyy)
% Description: Script to convert the MorVolc result structure into an Excel
%   file.
%
% Input:
%   xlsFolFil: Excel file name and folder.
%   morRes: MorVolc result structure.

%% General Parameters
gp = {'Tif File:',MV_Res.GeneralParams.inputs.tifFile;...
    'Resolution:',MV_Res.GeneralParams.inputs.dx;...
    'Contour Iteration:',MV_Res.GeneralParams.inputs.contIter;...
    'Craters:',~isempty(MV_Res.GeneralParams.inputs.craterXY);...
    'Natural Interpolation:',MV_Res.GeneralParams.inputs.interpSurfaces.Natural==1;...
    'IDW Interpolation:',MV_Res.GeneralParams.inputs.interpSurfaces.IDW==1;...
    'Kriging Interpolation:',MV_Res.GeneralParams.inputs.interpSurfaces.Kriging==1};

xlswrite(xlsFolFil,gp,'General_Parameters')
    
%% Size Parameters
szp = {'Basal Area (m2):',MV_Res.SizeParams.Basal.Area;...
    'Basal Width (m):',MV_Res.SizeParams.Basal.Width;...
    'Basal Ellipse Major Axis (m):',MV_Res.SizeParams.Basal.Major_Axis;...
    'Basal Ellipse Minor Axis (m):',MV_Res.SizeParams.Basal.Minor_Axis;...
    'Basal Ellipse X Centroid (m):',MV_Res.SizeParams.Basal.Ellipse.x0;...
    'Basal Ellipse Y Centroid (m):',MV_Res.SizeParams.Basal.Ellipse.y0;...
    'Basal Ellipse Axis Ellipticity:',MV_Res.SizeParams.Basal.Axis_Ellipticity;...
    [],[];...
    'Summit Area (m2):',MV_Res.SizeParams.Summit.Area;...
    'Summit Width (m):',MV_Res.SizeParams.Summit.Width;...
    'Summit Ellipse Major Axis (m):',MV_Res.SizeParams.Summit.Major_Axis;...
    'Summit Ellipse Major Axis (m):',MV_Res.SizeParams.Summit.Minor_Axis;...
    'Summit Ellipse X Centroid (m):',MV_Res.SizeParams.Summit.Ellipse.x0;...
    'Summit Ellipse Y Centroid (m):',MV_Res.SizeParams.Summit.Ellipse.y0;...
    'Summit Ellipse Ellipticity:',MV_Res.SizeParams.Summit.Axis_Ellipticity;...
    [],[];...
    'Maximum Height (m):',MV_Res.SizeParams.Heights.Maximum_From_Boundary;...
    'Maximum Volume (m3):',MV_Res.SizeParams.Volumes.Maximum;...
    'Minimum Eroded Volume (m3):',MV_Res.SizeParams.Volumes.Minimum_Eroded;...
    [],[];...
    'Peak Heights (m):',[]};
hStart = size(szp,1)+1;
szp = [szp;{[],'Natural:';...
    [],'IDW:';...
    [],'Kriging:';...
    [],[];...
    'Volumes (m3):',[]}];
vStart = size(szp,1)+1;
szp = [szp;{[],'Natural:';...
    [],'IDW:';...
    [],'Kriging:';...
    [],[];...
    'Max Anywhere Height',[];...
    [],[]}];
haStart = size(szp,1)+1;
szp = [szp;{[],'Natural:';...
    [],'IDW:';...
    [],'Kriging:'}];

szp{haStart-1,3} = 'Height (m)';
szp{haStart-1,4} = 'X (m)';
szp{haStart-1,5} = 'Y (m)';

interps = {'Natural','IDW','Kriging'};
for i = 1:length(interps)
    t = 0;
    evalc(sprintf('t = MV_Res.GeneralParams.inputs.interpSurfaces.%s;',interps{i}));
    if t
        evalc(sprintf('szp{hStart+%d,3} = MV_Res.SizeParams.Heights.Surface_to_Peak.%s;',i-1,interps{i}));
        evalc(sprintf('szp{vStart+%d,3} = MV_Res.SizeParams.Volumes.Total.%s;',i-1,interps{i}));
        evalc(sprintf('szp{haStart+%d,3} = MV_Res.SizeParams.Heights.Maximum_From_BasalSurface.%s.Height;',i-1,interps{i}));
        evalc(sprintf('szp{haStart+%d,4} = MV_Res.SizeParams.Heights.Maximum_From_BasalSurface.%s.X;',i-1,interps{i}));
        evalc(sprintf('szp{haStart+%d,5} = MV_Res.SizeParams.Heights.Maximum_From_BasalSurface.%s.Y;',i-1,interps{i}));
    end
end
    
xlswrite(xlsFolFil,szp,'Size_Parameters')

%% Orientation Parameters
op = {'Basal Ellipse Orientation (deg.):',MV_Res.OrientParams.Basal_Major_Axis_Azimuth;...
    'Summit Ellipse Orientation (deg.):',MV_Res.OrientParams.Summit_Major_Axis_Azimuth;...
    [],[];...
    'CONTOUR (m)','ELLIPSE ORIENTATION (deg.)'};
xlsI = size(op,1)+1;
for i = 1:length(MV_Res.OrientParams.Contour_Elevation_Major_Axis_Azimuths)
    op{xlsI,1} = MV_Res.OrientParams.Contour_Elevation_Major_Axis_Azimuths(i,1);
    op{xlsI,2} = MV_Res.OrientParams.Contour_Elevation_Major_Axis_Azimuths(i,2);
    xlsI = xlsI+1;
end

xlswrite(xlsFolFil,op,'Orientation_Parameters')

%% Shape Parameters
shp = {'Mean Contour Maximum Diameter Ellipticity Index:',MV_Res.ShapeParams.Mean_Shapes.Ellipticity_Index.MaxDiameter;...
    'Mean Contour Best-Fitting Ellipse Ellipticity Index:',MV_Res.ShapeParams.Mean_Shapes.Ellipticity_Index.BFEllipse;...
    'Mean Contour Maximum Diameter Irregularity Index:',MV_Res.ShapeParams.Mean_Shapes.Irregularity_Index.MaxDiameter;...
    'Mean Contour Best-Fitting Ellipse Irregularity Index:',MV_Res.ShapeParams.Mean_Shapes.Irregularity_Index.BFEllipse;...
    'Mean Contour Best-Fitting Ellipse Axis Ellipticity:',MV_Res.ShapeParams.Mean_Shapes.Ellipse_Ellipticity;...
    [],[];...
    'Summit Width - Basal Width Ratio:',MV_Res.ShapeParams.Geometry.SummitWidth_BasalWidth;...
    'Height - Basal Width Ratio:',[]};
hbwI = size(shp,1)+1;
shp = [shp;{[],'Natural:';...
    [],'IDW:';...
    [],'Kriging:';...
    [],[];...
    'Skewness:',[]}];
skI = size(shp,1)+1;
shp = [shp;{[],'X:';...
    [],'Y:';...
    'Kurtosis:',[]}];
kuI = size(shp,1)+1;
shp = [shp;{[],'X:';...
    [],'Y:';...
    [],[]}];

for i = 1:length(interps)
    t = 0;
    evalc(sprintf('t = MV_Res.GeneralParams.inputs.interpSurfaces.%s;',interps{i}));
    if t
        evalc(sprintf('shp{hbwI+%d,3} = MV_Res.ShapeParams.Geometry.Height_BasalWidth.%s;',i-1,interps{i}));
    end
end

shp{skI,3} = MV_Res.ShapeParams.Geometry.Skewness(1);
shp{skI+1,3} = MV_Res.ShapeParams.Geometry.Skewness(2);
shp{kuI,3} = MV_Res.ShapeParams.Geometry.Kurtosis(1);
shp{kuI+1,3} = MV_Res.ShapeParams.Geometry.Kurtosis(2);

shp = [shp;{[],[],[];...
    'CONTOUR (m)','MAX DIAMETER ELLIPTICITY INDEX','BEST-FITTING ELLIPSE ELLIPTICITY INDEX'}];
xlsI = size(shp,1);
shp{xlsI,4} = 'MAX DIAMETER IRREGULARITY INDEX';
shp{xlsI,5} = 'BEST-FITTING ELLIPSE IRREGULARITY INDEX';
shp{xlsI,6} = 'AXIS ELLIPTICITY';
xlsI  = xlsI+1;
for i = 1:length(MV_Res.ShapeParams.Contour.Elevations)
    shp{xlsI,1} = MV_Res.ShapeParams.Contour.Elevations(i);
    shp{xlsI,2} = MV_Res.ShapeParams.Contour.Ellipticity_Indices.MaxDiameter(i);
    shp{xlsI,3} = MV_Res.ShapeParams.Contour.Ellipticity_Indices.BFEllipse(i);
    shp{xlsI,4} = MV_Res.ShapeParams.Contour.Irregularity_Indices.MaxDiameter(i);
    shp{xlsI,5} = MV_Res.ShapeParams.Contour.Irregularity_Indices.BFEllipse(i);
    shp{xlsI,6} = MV_Res.ShapeParams.Contour.Axis_Ellipticity(i);
    xlsI = xlsI+1;
end

xlswrite(xlsFolFil,shp,'Shape_Parameters')

%% Slope Parameters
slp = {'Lower Flank Mean Slope (deg.):',MV_Res.SlopeParams.Lower_Flank.Mean;...
    'Lower Flank Median Slope (deg.):',MV_Res.SlopeParams.Lower_Flank.Median;...
    'Lower Flank Std Slope (deg.):',MV_Res.SlopeParams.Lower_Flank.Std;...
    [],[];...
    'Flank Mean Slope (deg.):',MV_Res.SlopeParams.Main_Flank.Mean;...
    'Flank Median Slope (deg.):',MV_Res.SlopeParams.Main_Flank.Median;...
    'Flank Std Slope (deg.):',MV_Res.SlopeParams.Main_Flank.Std;...
    [],[];...
    'Summit Mean Slope (deg.):',MV_Res.SlopeParams.Summit.Mean;...
    'Summit Median Slope (deg.):',MV_Res.SlopeParams.Summit.Median;...
    'Summit Std Slope (deg.):',MV_Res.SlopeParams.Summit.Std;...
    [],[];...
    'Full Edifice Mean Slope (deg.):',MV_Res.SlopeParams.Full_Edifice.Mean;...
    'Full Edifice Median Slope (deg.):',MV_Res.SlopeParams.Full_Edifice.Median;...
    'Full Edifice Std Slope (deg.):',MV_Res.SlopeParams.Full_Edifice.Std;...
    [],[];...
    'Contour Maximum Slope (deg.):',MV_Res.SlopeParams.Maximum_Slope.Slope;...
    'Contour Maximum Elevation (m):',MV_Res.SlopeParams.Maximum_Slope.Elevation;...
    'Max Slope Height (m):',MV_Res.SlopeParams.Maximum_Slope.Height;...
    'Max Slope Height Fraction:',MV_Res.SlopeParams.Maximum_Slope.Height_Fraction;...
    [],[];...
    'CONTOUR (m)','MIN. SLOPE (deg.)'};

slpI = size(slp,1);
slp{slpI,3} = 'MAX. SLOPE (deg.)';
slp{slpI,4} = 'MEAN SLOPE (deg.)';
slp{slpI,5} = 'MEDIAN SLOPE (deg.)';
slpI = slpI + 1;
for i = 1:length(MV_Res.SlopeParams.Contour.Elevations)
    slp{slpI,1} = MV_Res.SlopeParams.Contour.Elevations(i);
    slp{slpI,2} = MV_Res.SlopeParams.Contour.Min(i);
    slp{slpI,3} = MV_Res.SlopeParams.Contour.Max(i);
    slp{slpI,4} = MV_Res.SlopeParams.Contour.Mean(i);
    slp{slpI,5} = MV_Res.SlopeParams.Contour.Median(i);
    slpI = slpI+1;
end

xlswrite(xlsFolFil,slp,'Slope_Parameters')

%% Peak Parameters
pp = {'Summit Contour Peak Count:',MV_Res.PeakParams.Summit.Contour.Count;...
    'Main Flank Contour Peak Count:',MV_Res.PeakParams.Main_Flank.Contour.Count;...
    'Lower Flank Contour Peak Count:',MV_Res.PeakParams.Lower_Flank.Contour.Count;...
    [],[];...
    'Summit Local Maxima Peak Count:',MV_Res.PeakParams.Summit.Local.Count;...
    'Main Flank Local Maxima Peak Count:',MV_Res.PeakParams.Main_Flank.Local.Count;...
    'Lower Flank Local Maxima Peak Count:',MV_Res.PeakParams.Lower_Flank.Local.Count};
xlswrite(xlsFolFil,pp,'Peak_Parameters')

%% Crater Parameters
if ~isempty(MV_Res.CraterParams)
    for i = 1:length(MV_Res.CraterParams.Size.Area)
        cp = {};
        cp = {'Crater Area (m2):',MV_Res.CraterParams.Size.Area(i);...
            'Crater Width (m):',MV_Res.CraterParams.Size.Width(i);...
            'Crater Ellipse Major Axis (m):',MV_Res.CraterParams.Size.Major_Axis(i);...
            'Crater Ellipse Minor Axis (m):',MV_Res.CraterParams.Size.Minor_Axis(i);...
            'Crater Ellipse Azimuth (deg.):',MV_Res.CraterParams.Orientation.Major_Axis_Azimuth(i);...
            [],[];...
            'Crater Maximum Diameter Ellipticity Index:',MV_Res.CraterParams.Shape.Ellipticity_Index.MaxDiameter(i);...
            'Crater Best-Fitting Ellipse Ellipticity Index:',MV_Res.CraterParams.Shape.Ellipticity_Index.BFEllipse(i);...
            'Crater Maximum Diameter Irregularity Index:',MV_Res.CraterParams.Shape.Irregularity_Index.MaxDiameter(i);...
            'Crater Best-Fitting Ellipse Irregularity Index:',MV_Res.CraterParams.Shape.Irregularity_Index.BFEllipse(i);...
            'Crater Best-Fitting Ellipse Axis Ellipticity:',MV_Res.CraterParams.Size.Axis_Ellipticity(i);...
            [],[];...
            'Crater Maximum Volume (m3):',MV_Res.CraterParams.Size.Volume.Maximum(i);...
            'Crater Maximum Depth (m):',MV_Res.CraterParams.Size.Depth.Maximum(i);...
            'Crater Depths (m):',[];...
            [],'Natural:'};
        cdI = size(cp,1);
        cp = [cp;{[],'IDW:';...
            [],'Kriging:';...
            [],[];...
            'Crater Volumes (m3):',[];...
            [],'Natural:'}];
        cvI = size(cp,1);
        cp = [cp;{[],'IDW:';...
            [],'Kriging:';...
            [],[];...
            'Crater Width - Basal Width Ratio:',MV_Res.CraterParams.Shape.Geometry.CraterWidth_BasalWidth(i);...
            'Crater Depth - Crater Width Ratio:',[];...
            [],'Natural:'}];
        cdcwI = size(cp,1);
        cp = [cp;{[],'IDW:';...
            [],'Kriging:';...
            'Crater Depth - Basal Height Ratio:',[];...
            [],'Natural:'}];
        cdbhI = size(cp,1);
        cp = [cp;{[],'IDW:';...
            [],'Kriging:';...
            [],[]}];

        for j = 1:length(interps)
            t = 0;
            evalc(sprintf('t = MV_Res.GeneralParams.inputs.interpSurfaces.%s;',interps{i}));
            if t
                evalc(sprintf('szp{cdI+%d,3} = MV_Res.CraterParams.Size.Depth.Total{i}.%s;',i-1,interps{j}));
                evalc(sprintf('szp{cvI+%d,3} = MV_Res.CraterParams.Size.Volume.Total{i}.%s;',i-1,interps{j}));
                evalc(sprintf('szp{cdcwI+%d,3} = MV_Res.CraterParams.Shape.Geometry.CraterDepth_CraterWidth{i}.%s;',i-1,interps{j}));
                evalc(sprintf('szp{cdbhI+%d,4} = MV_Res.CraterParams.Shape.Geometry.CraterDepth_BasalHeight{i}.%s;',i-1,interps{j}));
            end
        end

        cp{size(cp,1),3} = [];
        
        cp = [cp;{'Crater Mean Slope (deg.):', MV_Res.CraterParams.Slope.Mean(i),[];...
            'Crater Median Slope (deg.):', MV_Res.CraterParams.Slope.Median(i),[];...
            [],[],[]}];

        cp = [cp;{'CONTOUR (m)','MIN. SLOPE (deg.)','MAX. SLOPE (deg.)'}];
        cpI = size(cp,1);
        cp{cpI,4} = 'MEAN SLOPE (deg.)';
        cp{cpI,5} = 'MEDIAN SLOPE (deg.)';
        cpI = cpI + 1;
        for j = 1:length(MV_Res.CraterParams.Slope.Contour{i}.Elevations)
            cp{cpI,1} = MV_Res.CraterParams.Slope.Contour{i}.Elevations(j);
            cp{cpI,2} = MV_Res.CraterParams.Slope.Contour{i}.Min(j);
            cp{cpI,3} = MV_Res.CraterParams.Slope.Contour{i}.Max(j);
            cp{cpI,4} = MV_Res.CraterParams.Slope.Contour{i}.Mean(j);
            cp{cpI,5} = MV_Res.CraterParams.Slope.Contour{i}.Median(j);
            cpI = cpI+1;
        end

        xlswrite(xlsFolFil,cp,sprintf('Crater_%d_Parameters',i))
    end
end